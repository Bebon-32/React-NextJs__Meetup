{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AL-RD\\\\Desktop\\\\Learning React\\\\NextJs P2\\\\pages\\\\[meetupId]\\\\index.js\";\n// our-domain.com/new-meetup/\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupId = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://El-Bebo:Bebon32@cluster0.xzgdy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  //   fetch data from API here\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://El-Bebo:Bebon32@cluster0.xzgdy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetups = await meetupsCollection.findOne({}, {\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetups.map()\n    }\n  };\n};\nexport default MeetupId;","map":{"version":3,"sources":["C:/Users/AL-RD/Desktop/Learning React/NextJs P2/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupId","props","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetups","findOne","meetupData"],"mappings":";;AAAA;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAEC,KAAK,CAACC,KADb;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAlBM;AAoBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,eAAe,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAC5B,EAD4B,EAE5B;AAAEb,IAAAA,GAAG,EAAEf,QAAQ,CAACuB,QAAD;AAAf,GAF4B,CAA9B;AAKAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACL2B,MAAAA,UAAU,EAAEF,eAAe,CAACP,GAAhB;AADP;AADF,GAAP;AAKD,CAxBM;AA0BP,eAAenB,QAAf","sourcesContent":["// our-domain.com/new-meetup/\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupId = () => {\r\n  return (\r\n    <MeetupDetail\r\n      img={props.image}\r\n      title={props.title}\r\n      address={props.address}\r\n      description={props.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://El-Bebo:Bebon32@cluster0.xzgdy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  //   fetch data from API here\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://El-Bebo:Bebon32@cluster0.xzgdy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetups = await meetupsCollection.findOne(\r\n    {},\r\n    { _id: ObjectId(meetupId) }\r\n  );\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetups.map(),\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupId;\r\n"]},"metadata":{},"sourceType":"module"}