{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AL-RD\\\\Desktop\\\\Learning React\\\\NextJs P2\\\\pages\\\\index.js\";\n// our-domain.com/\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_DATA = [{\n  id: \"m1\",\n  title: \"First Meetup\",\n  image: \"http://alessioandreani.com/wp-content/uploads/2014/06/stock-photo-124188447-688x1030.jpg\",\n  address: \"The End of The World\",\n  description: \"Our First Meetup\"\n}, {\n  id: \"m2\",\n  title: \"Second Meetup\",\n  image: \"http://alessioandreani.com/wp-content/uploads/2014/06/stock-photo-124188447-688x1030.jpg\",\n  address: \"The End of The World\",\n  description: \"Our Second Meetup\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}; // good for fetching data in each request\n// export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//   fetch data from API here\n//   return {\n//     props: {\n//       meetup: DUMMY_DATA,\n//     },\n//   };\n// };\n// good for fetching data at build time\n\n\nexport const getStaticProps = async () => {\n  //   fetch data from API here\n  const client = await MongoClient.connect('mongodb+srv://El-Bebo:Bebon32@cluster0.xzgdy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const result = await meetupsCollection.insertOne(data);\n  client.close();\n  return {\n    props: {\n      meetup: result\n    }\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/AL-RD/Desktop/Learning React/NextJs P2/pages/index.js"],"names":["MeetupList","DUMMY_DATA","id","title","image","address","description","HomePage","props","meetup","getStaticProps","client","MongoClient","connect","db","meetupsCollection","collection","result","insertOne","data","close"],"mappings":";;AAAA;AAEA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,0FAJJ;AAKEC,EAAAA,OAAO,EAAE,sBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADiB,EASjB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EACH,0FAJJ;AAKEC,EAAAA,OAAO,EAAE,sBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CATiB,CAAnB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AAEA,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BC,IAA5B,CAArB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEQ;AADH;AADF,GAAP;AAKD,CAnBM;AAqBP,eAAeV,QAAf","sourcesContent":["// our-domain.com/\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_DATA = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"First Meetup\",\r\n    image:\r\n      \"http://alessioandreani.com/wp-content/uploads/2014/06/stock-photo-124188447-688x1030.jpg\",\r\n    address: \"The End of The World\",\r\n    description: \"Our First Meetup\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"Second Meetup\",\r\n    image:\r\n      \"http://alessioandreani.com/wp-content/uploads/2014/06/stock-photo-124188447-688x1030.jpg\",\r\n    address: \"The End of The World\",\r\n    description: \"Our Second Meetup\",\r\n  },\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  return <MeetupList meetups={props.meetup} />;\r\n};\r\n\r\n// good for fetching data in each request\r\n// export const getServerSideProps = async (context) => {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   fetch data from API here\r\n//   return {\r\n//     props: {\r\n//       meetup: DUMMY_DATA,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// good for fetching data at build time\r\nexport const getStaticProps = async () => {\r\n  //   fetch data from API here\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://El-Bebo:Bebon32@cluster0.xzgdy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const result = await meetupsCollection.insertOne(data);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetup: result,\r\n    },\r\n  };\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}